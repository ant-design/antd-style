// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`createStyles > styles 对象的使用 > createStyleFn 通过函数方式可以拿到 token 等信息 > 只返回一个 css 字符串，使用正常，类型定义也正常 1`] = `
.emotion-0 {
  background-color: #ffffff;
  padding: 24px;
}

<div
  class="emotion-0"
>
  card
</div>
`;

exports[`createStyles > styles 对象的使用 > createStyleFn 通过函数方式可以拿到 token 等信息 > 字符串模板的对象模式用法 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

.emotion-1 {
  margin-top: 24px;
}

<div
  class="emotion-0"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

exports[`createStyles > styles 对象的使用 > cx 的处理方式 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

.emotion-1 {
  margin-top: 24px;
}

<div
  class="emotion-0 with-cx"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

exports[`createStyles > styles 对象的使用 > styleObject 方法 > css模式的写法 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

.emotion-1 {
  margin-top: 16px;
}

<div
  class="emotion-0"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

exports[`createStyles > styles 对象的使用 > styleObject 方法 > 只返回一个 css 字符串，使用正常，类型定义也正常 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

<div
  class="emotion-0"
>
  card
</div>
`;

exports[`createStyles > styles 对象的使用 > styleObject 方法 > 对象模式的用法 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

.emotion-1 {
  margin-top: 16px;
}

<div
  class="emotion-0"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

exports[`createStyles > theme 对象使用 > 默认用法 1`] = `
.emotion-0 {
  color: #1677ff;
}

<div
  class="emotion-0"
  style="background: rgb(245, 245, 245);"
>
  123
</div>
`;

exports[`createStyles > 响应主题 > 嵌套主题 1`] = `
.emotion-0 {
  background-color: #1677ff;
  color: red;
  padding: 24px;
}

.emotion-1 {
  margin-top: 24px;
}

<div
  class="emotion-0"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`createStyles > styles 对象的使用 > createStyleFn 通过函数方式可以拿到 token 等信息 > 只返回一个 css 字符串，使用正常，类型定义也正常 1`] = `
.emotion-0 {
  background-color: #ffffff;
  padding: 24px;
}

<div
  class="emotion-0"
>
  card
</div>
`;

exports[`createStyles > styles 对象的使用 > createStyleFn 通过函数方式可以拿到 token 等信息 > 可以获取 prefixCls 与 iconPrefixCls 1`] = `
.emotion-0.cp-btn {
  background: lightsteelblue;
  border: none;
  color: royalblue;
}

.emotion-0 .cpicon {
  color: darkblue;
}

<button
  class="cp-btn cp-btn-default emotion-0"
  type="button"
>
  <span
    class="cp-btn-icon"
  >
    <span
      aria-label="smile"
      class="cpicon cpicon-smile"
      role="img"
    >
      <svg
        aria-hidden="true"
        data-icon="smile"
        fill="currentColor"
        focusable="false"
        height="1em"
        viewBox="64 64 896 896"
        width="1em"
      >
        <path
          d="M288 421a48 48 0 1096 0 48 48 0 10-96 0zm352 0a48 48 0 1096 0 48 48 0 10-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 01248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 01249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 01775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 01775 775zM664 533h-48.1c-4.2 0-7.8 3.2-8.1 7.4C604 589.9 562.5 629 512 629s-92.1-39.1-95.8-88.6c-.3-4.2-3.9-7.4-8.1-7.4H360a8 8 0 00-8 8.4c4.4 84.3 74.5 151.6 160 151.6s155.6-67.3 160-151.6a8 8 0 00-8-8.4z"
        />
      </svg>
    </span>
  </span>
  <span>
    CP Button
  </span>
</button>
`;

exports[`createStyles > styles 对象的使用 > createStyleFn 通过函数方式可以拿到 token 等信息 > 字符串模板的对象模式用法 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

.emotion-1 {
  margin-top: 24px;
}

<div
  class="emotion-0"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

exports[`createStyles > styles 对象的使用 > cx 的处理方式 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

.emotion-1 {
  margin-top: 24px;
}

<div
  class="emotion-0 with-cx"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

exports[`createStyles > styles 对象的使用 > styleObject 方法 > css模式的写法 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

.emotion-1 {
  margin-top: 16px;
}

<div
  class="emotion-0"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

exports[`createStyles > styles 对象的使用 > styleObject 方法 > 只返回一个 css 字符串，使用正常，类型定义也正常 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

<div
  class="emotion-0"
>
  card
</div>
`;

exports[`createStyles > styles 对象的使用 > styleObject 方法 > 对象模式的用法 1`] = `
.emotion-0 {
  background-color: #f5f5f5;
  padding: 24px;
}

.emotion-1 {
  margin-top: 16px;
}

<div
  class="emotion-0"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;

exports[`createStyles > theme 对象使用 > 默认用法 1`] = `
.emotion-0 {
  color: #1677ff;
}

<div
  class="emotion-0"
  style="background: rgb(245, 245, 245);"
>
  123
</div>
`;

exports[`createStyles > 响应主题 > 嵌套主题 1`] = `
.emotion-0 {
  background-color: #1677ff;
  color: red;
  padding: 24px;
}

.emotion-1 {
  margin-top: 24px;
}

<div
  class="emotion-0"
>
  <div
    class="emotion-1"
  >
    card
  </div>
</div>
`;
